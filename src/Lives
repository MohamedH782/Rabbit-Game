int lives=4;
private boolean gameStarted = false;


public void display(GLAutoDrawable glAutoDrawable) {
        GL gl = glAutoDrawable.getGL();
        gl.glClear(GL.GL_COLOR_BUFFER_BIT);       //Clear The Screen And The Depth Buffer
        gl.glLoadIdentity();

        DrawBackground(gl);

        if (lives>0){
            if (easy && levels) {
                changev(gl, 1000);
            } else if (meduim && levels) {
                changev(gl, 700);
            } else if (hard && levels) {
                changev(gl, 700);
            }

            //start menu
            else if (levels && back == false) {
                DrawBackground2(gl);
                DrawLevels(gl, x, y);
                DrawSound(gl, x, y, 8);
            } else if (back && levels) {
                DrawBackground2(gl);
                DrawPlay(gl, x, y, 6);
                DrawHowToPlay(gl, x, y, 15);
                DrawExit(gl, x, y, 7);
                DrawSound(gl, x, y, 8);
                back = false;
                levels = false;
            } else {
                DrawBackground2(gl);

                DrawPlay(gl, x, y, 6);
                DrawExit(gl, x, y, 7);
                DrawHowToPlay(gl, x, y, 15);
                DrawSound(gl, x, y, 8);
            }
        } else if (lives==0) {}

    }
  
void handleMousePressed() {
        if (xclicked >= 88 && xclicked <= 95 && yclicked <= 96 && yclicked >= 90) {
            changeState = true;
        } else if (xclicked >= 38 && xclicked <= 60 && yclicked <= 77 && yclicked >= 65 && levels == false) {
            levels = true;
            System.out.println("play");

        } else if (xclicked >= 4 && xclicked <= 10 && yclicked <= 96 && yclicked >= 90) {
            back = true;
        } else if (xclicked >= 38 && xclicked <= 60 && yclicked <= 77 && yclicked >= 65 && levels) {
            easy = true;
            gameStarted=true;
        } else if (xclicked >= 38 && xclicked <= 61 && yclicked <= 58 && yclicked >= 44 && levels) {
            meduim = true;
            gameStarted=true;
        } else if (xclicked >= 38 && xclicked <= 61 && yclicked <= 38 && yclicked >= 24 && levels) {
            hard = true;
            gameStarted=true;
        }

    }

    public void mouseClicked(MouseEvent e) {
        double x = e.getX();
        double y = e.getY();

        Component c = e.getComponent();
        double width = c.getWidth();
        double height = c.getHeight();

        xclicked = (int) ((x / width) * 100);
        yclicked = ((int) ((y / height) * 100));
//reversing direction of y axis
        yclicked = 100 - yclicked;
        mouseClick = true;
        System.out.println(xclicked + "  " + yclicked);
        handleMousePressed();
        if (gameStarted && !(xclicked >= xpos - 5 && xclicked <= xpos + 10 && yclicked >= ypos - 10 && yclicked <= ypos + 16)) {
            lives--;
        }

    }
private void drawlives(GL gl) {
        gl.glRasterPos2f(-0.9f, .7f);
        String scoreString = "lives: " + lives;
        for (char c : scoreString.toCharArray()) {
            glut.glutBitmapCharacter(GLUT.BITMAP_HELVETICA_18, (char) c);
        }
    }
 private void DrawGameOverMessage(GL gl) {
        // Set color and size for the game over message

    }
